<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs
            title="開発ドキュメント用サンプル"
            description="Aipoアプリの開発ドキュメント用のサンプルがジェットです。">
        <Require feature="views"/>
        <Require feature="dynamic-height"/>
        <Require feature="minimessage"/>
        <Require feature="tabs"/>
        <Require feature="aipostyle"/>
        <Require feature="osapi"/>
    </ModulePrefs>
    <Content type="html" view="popup"><![CDATA[
        <script type="text/javascript">

            gadgets.util.registerOnLoadHandler(init);

            function init() {
                // アクティビティ送信時に受け渡された enternalId パラメータ
                var externalId = gadgets.views.getParams()['externalId'];
            }

        </script>
        ]]></Content>
    <Content type="html"><![CDATA[
        <script type="text/javascript">

        gadgets.util.registerOnLoadHandler(init);

        function fetchViewer() {

            osapi.people.get({ userId: '@viewer' }).execute(function(response) {

                // ユーザーID
                // 例）org001:sample1
                var userId = response.id;

                // 表示名（氏名）
                // 例）木村 一郎
                var displayName = response.displayName;

                // ...
            });

            osapi.people.getViewer().execute(function(response) {
                // ...
            });
        }

        function fetchUsers() {

            osapi.people.get({ userId: '@viewer', groupId: '@all' }).execute(function(response) {

                var users = response.list;

                for (var i in users) {
                    // ユーザーID
                    // 例）org001:sample1
                    var userId = users[i].id;

                    // 表示名（氏名）
                    // 例）木村 一郎
                    var displayName = users[i].displayName;

                    // ...
                }

                // ...
            });

            osapi.people.getViewerFriends().execute(function(response) {
                // ...
            });
        }

        function fetchLimitUsers() {

            osapi.people.get({ userId: '@viewer', groupId: '@all', startIndex: 10, count: 20 }).execute(function(response) {

                // 全件数
                // 例）100
                var total = response.totalResults;

                // 開始位置
                // 例）10
                var startIndex = response.startIndex;

                // 取得件数
                // 例）20
                var count = response.itemsPerPage;

                var users = response.list;

                for (var i in users) {
                    // ユーザーID
                    // 例）org001:sample1
                    var userId = users[i].id;

                    // 表示名（氏名）
                    // 例）木村 一郎
                    var displayName = users[i].displayName;

                    // ...
                }

                // ...

            });
        }

        function fetchFilterUsers() {

            osapi.people.get({ userId: '@viewer', groupId: '@all', filterBy: 'name', filterOp: 'contains', filterValue: '太郎' }).execute(function(response) {
                // ...
            });
        }

        function fetchSortUsers() {

            osapi.people.get({ userId: '@viewer', groupId: '@all', sortBy: 'position', sortOrder: 'descending' }).execute(function(response) {
                // ...
            });
        }

        function fetchGroups() {

            osapi.groups.get({ userId: '@viewer' }).execute(function(response) {

                var groups = response.list;

                for (var i in groups) {
                    // グループID
                    // 例）5031301034848187_23
                    var groupId = groups[i].id.groupId;

                    // グループ名（部署名）
                    // 例）営業部
                    var title = groups[i].title;

                    // グループ種別（部署、マイグループ）
                    // 例）unit
                    var type = groups[i].type

                    // ...
                }

                // ...
            });
        }

        function fetchLimitGroups() {

            osapi.groups.get({ userId: '@viewer', startIndex: 10, count: 20 }).execute(function(response) {

                // 全件数
                // 例）100
                var total = response.totalResults;

                // 開始位置
                // 例）10
                var startIndex = response.startIndex;

                // 取得件数
                // 例）20
                var count = response.itemsPerPage;

                var groups = response.list;

                for (var i in groups) {
                    // グループID
                    // 例）5031301034848187_23
                    var groupId = groups[i].id.groupId;

                    // グループ名（部署名）
                    // 例）営業部
                    var title = groups[i].title;

                    // ...
                }

                // ...
            });
        }

        function fetchUsersFromGroup() {

            osapi.groups.get({ userId: '@viewer' }).execute(function(response) {

                var groups = response.list;

                // グループID
                // 例）5031301034848187_23
                var groupId = groups[0].id.groupId;

                osapi.people.get({ userId: '@viewer', groupId: groupId }).execute(function(response) {

                    var users = response.list;

                    for (var i in users) {
                        // ユーザーID
                        // 例）org001:sample1
                        var userId = users[i].id;

                        // 表示名（氏名）
                        // 例）木村 一郎
                        var displayName = users[i].displayName;

                        // ...
                    }

                    // ...
                });

            });

        }

        function fetchFilterGroups() {

            osapi.groups.get({ userId: '@viewer', filterBy: 'type', filterOp: 'equals', filterValue: 'mygroup' }).execute(function(response) {
                // ...
            });
        }

        function fetchSortGroups() {

            osapi.groups.get({ userId: '@viewer', sortBy: 'title', sortOrder: 'descending' }).execute(function(response) {
                // ...
            });
        }

        function createActivityPriorityLow() {

            osapi.activities.create({
                userId: '@viewer', activity: { title: 'アクティビティのタイトル' }
            }).execute(function(response) {
                // ...
            });
        }


        function createActivityPriorityLowRecipients() {

            var recipients = [ "org001:sample1","org001:sample2","org001:sample3"];

            osapi.activities.create({
                userId: '@viewer', activity: { title: 'アクティビティのタイトル',recipients:recipients }
            }).execute(function(response) {
                // ...
            });
        }

        function createActivityPriorityHighRecipients() {

            var recipients = [ "org001:sample1","org001:sample2","org001:sample3"];

            osapi.activities.create({
                userId: '@viewer', activity: { title: 'アクティビティのタイトル', recipients:recipients, priority: 1 }
            }).execute(function(response) {
                // ...
            });
        }

        function createActivityPriorityLowExternalId() {

            osapi.activities.create({
                userId: '@viewer', activity: { title: 'アクティビティのタイトル', externalId: "2" }
            }).execute(function(response) {
                // ...
            });
        }

        function updateAppData() {

            osapi.appdata.update({ userId: '@viewer', data: { key1: "値1", key2: "値2" }  }).execute(function(response) {
                // ...
            });
        }

        function fetchAppData() {

            osapi.appdata.get({ userId: ['org001:sample1', 'org001:sample2', 'org001:sample3'] ,fields: ['key1', 'key2','key3'] }).execute(function(response) {
                // ユーザーID、アプリデータの連想配列
                for (var userId in response) {
                    var data = response[userId];
                    // キー, 値の連想配列
                    for (var key in data) {
                        // 値
                        // 例）値1
                        var value = data[key];
                    }
                }
            });
        }

        function deleteAppData() {

            osapi.appdata.delete({ userId: '@viewer' ,fields: ['key1', 'key2'] }).execute(function(response) {
                // ...
            });
        }

        function init() {
            fetchViewer();
            fetchUsers();
            fetchLimitUsers();
            fetchFilterUsers();
            fetchSortUsers();
            fetchGroups();
            fetchLimitGroups();
            fetchUsersFromGroup();
            fetchFilterGroups();
            fetchSortGroups();
            createActivityPriorityLow();
            createActivityPriorityLowRecipients();
            createActivityPriorityHighRecipients();
            createActivityPriorityLowExternalId();
            updateAppData();
            fetchAppData();
            deleteAppData();
            gadgets.window.adjustHeight();
        }

        </script>
        ]]></Content>
</Module>