<?xml version="1.0" encoding="UTF-8"?>
<!--

    Aipo is a groupware program developed by Aimluck,Inc.
    Copyright (C) 2004-2015 Aimluck,Inc.
    http://www.aipo.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<display-name>Aipo OpenSocial Container</display-name>

	<context-param>
		<param-name>guice-modules</param-name>
		<param-value>
      org.apache.shindig.common.PropertiesModule:
      com.aipo.orm.AipoOrmModule:
      com.aipo.container.AipoContainerModule:
      com.aipo.container.cache.AipoCacheModule:
      com.aipo.container.gadgets.AipoGadgetsGuiceModule:
      com.aipo.container.gadgets.oauth.AipoOAuthModule:
      com.aipo.social.core.config.AipoSocialApiGuiceModule:
      com.aipo.social.opensocial.spi.AipoSocialModule
    </param-value>
	</context-param>

	<context-param>
		<param-name>system.properties</param-name>
		<param-value>
    	shindig.host=localhost

    	aKey=/shindig/gadgets/proxy?container=default&amp;url=
    	shindig.port=

     </param-value>
	</context-param>

	<filter>
		<filter-name>containerFilter</filter-name>
		<filter-class>com.aipo.container.http.ContainerFilter</filter-class>
	</filter>

	<filter>
		<filter-name>bufferedServletFilter</filter-name>
		<filter-class>com.aipo.container.http.BufferedServletFilter</filter-class>
	</filter>

	<filter>
		<filter-name>databaseFilter</filter-name>
		<filter-class>com.aipo.orm.filter.DatabaseFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>containerFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>bufferedServletFilter</filter-name>
		<url-pattern>/v1/*</url-pattern>
		<url-pattern>/oauth2/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>authFilter</filter-name>
		<filter-class>org.apache.shindig.auth.AipoAuthenticationServletFilter</filter-class>
	</filter>

    <filter>
		<filter-name>securityTokenAuthFilter</filter-name>
		<filter-class>org.apache.shindig.auth.AipoSecurityTokenAuthenticationServletFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>databaseFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>securityTokenAuthFilter</filter-name>
		<url-pattern>/gadgets/ifr</url-pattern>
		<url-pattern>/gadgets/makeRequest</url-pattern>
		<url-pattern>/gadgets/api/rpc/*</url-pattern>
		<url-pattern>/rpc/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>authFilter</filter-name>
		<url-pattern>/v1/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.apache.shindig.common.servlet.GuiceServletContextListener</listener-class>
	</listener>

	<!-- Render a Gadget -->
	<servlet>
		<servlet-name>xml-to-html</servlet-name>
		<servlet-class>
			org.apache.shindig.gadgets.servlet.GadgetRenderingServlet</servlet-class>
	</servlet>

	<!-- makeRequest -->
	<servlet>
		<servlet-name>makeRequest</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.MakeRequestServlet</servlet-class>
	</servlet>


	<!-- OAuth callback -->
	<servlet>
		<servlet-name>oauthCallback</servlet-name>
		<servlet-class>
			org.apache.shindig.gadgets.servlet.OAuthCallbackServlet</servlet-class>
	</servlet>

	<!-- Metadata RPC -->
	<servlet>
		<servlet-name>metadata</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.RpcServlet</servlet-class>
	</servlet>

	<!-- javascript serving -->
	<servlet>
		<servlet-name>js</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.JsServlet</servlet-class>
	</servlet>

    <servlet>
		<servlet-name>oauth2Servlet</servlet-name>
		<servlet-class>com.aipo.social.core.oauth2.AipoOAuth2Servlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>restapiServlet</servlet-name>
		<servlet-class>com.aipo.container.protocol.AipoDataServiceServlet</servlet-class>
		<init-param>
			<param-name>handlers</param-name>
			<param-value>org.apache.shindig.handlers</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>jsonRpcServlet</servlet-name>
		<servlet-class>org.apache.shindig.protocol.JsonRpcServlet</servlet-class>
		<init-param>
			<param-name>handlers</param-name>
			<param-value>org.apache.shindig.handlers</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>js</servlet-name>
		<url-pattern>/gadgets/js/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>makeRequest</servlet-name>
		<url-pattern>/gadgets/makeRequest</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>jsonRpcServlet</servlet-name>
		<url-pattern>/rpc/*</url-pattern>
		<url-pattern>/gadgets/api/rpc/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>restapiServlet</servlet-name>
		<url-pattern>/v1/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>oauthCallback</servlet-name>
		<url-pattern>/gadgets/oauthcallback</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>xml-to-html</servlet-name>
		<url-pattern>/gadgets/ifr</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>metadata</servlet-name>
		<url-pattern>/gadgets/metadata</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>oauth2Servlet</servlet-name>
		<url-pattern>/oauth2/*</url-pattern>
	</servlet-mapping>

</web-app>
